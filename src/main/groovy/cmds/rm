#!/usr/bin/env groovy
package cmds

import groovy.json.JsonBuilder

def options = [
        '-p': { p -> { -> new JsonBuilder(scm.getProject(p).with{
            [
                    id : it.id,
                    name : it.key,
                    href: it.links.self.href,
                    repos : withRepos(it.key),
            ]
        } as Map).toPrettyString() } },
        '-l' : {lambda ->
            def f = evaluate(String.format('def fun = %s\n return this.&fun', lambda))
            println()
            f
        },

]
def switches = [
        '--all' : { { -> new JsonBuilder(scm.getProjects().collect{
            [
                    id : it.id,
                    name : it.key,
                    href: it.links.self.href[0],
                    repos : withRepos(it.key),
            ]
        }).toPrettyString()}}
]

def withRepos(def prj){
    this.binding.variables.scm.getRepos(prj).collect { [
            id: it.id,
            name: it.slug,
            href: it.links.clone.find { it.name == 'http' }?.href,
            public: it.public
    ]}
}
def functions = args.findAll { it in switches.keySet() }.collect { switches[it as String]?.call() }
args = args - args.findAll { it in switches.keySet() }
functions += args.split { it.startsWith('-') }.transpose().collect { opt, val -> options[opt]?.call(val) }.findAll()
functions.each {
    print(it.call())
}


